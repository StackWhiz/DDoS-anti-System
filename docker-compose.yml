version: '3.8'

services:
  # Redis for distributed rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: ddos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - ddos-network

  # DDoS Protection Service
  ddos-protection:
    build: .
    container_name: ddos-protection-service
    ports:
      - "8080:8080"  # Main API
      - "9090:9090"  # Metrics
    environment:
      - CONFIG_PATH=/app/config.yaml
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ddos-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ddos-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - ddos-protection
    networks:
      - ddos-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ddos-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - ddos-network

  # Nginx load balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: ddos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ddos-protection
    networks:
      - ddos-network

volumes:
  redis_data:
  grafana_data:

networks:
  ddos-network:
    driver: bridge
